stages:
  - dev-checks
  - dev-preview
  - merge-to-master
  - run-checks-on-master
  - deploy-to-production
  
workflow:
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME && $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_BRANCH == "main" && $CI_PIPELINE_SOURCE == "push"

dev-checks:
  stage: dev-checks
  tags: 
    - ubuntu-latest
  variables:
    GIT_CHECKOUT: "true"
  image: node:18
  script:
    - npm install
    - CI=false npm run build
    - npm run build:storybook
    - npm run test:unit
    - npm run test:e2e
    - npm run lint
    - npm run type:check
    - npm run i18n:check
dev-preview:
  stage: dev-preview
  tags: 
    - ubuntu-latest
  variables:
    GIT_CHECKOUT: "true"
  image: node:18
  script:
    - npm install -g vercel
    - vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
    - vercel build --token=${{ secrets.VERCEL_TOKEN }}
    - echo "Your branch was successfully deployed!"
merge-to-master:
  stage: merge-to-master
  tags: 
    - ubuntu-latest
  environment: merge approve
  variables:
    GIT_CHECKOUT: "true"
  before_script:
    - apk add --update git openssh-client
    - mkdir ~/.ssh
    - ssh-keyscan -p 2222 <gitlab.domain.com> > ~/.ssh/known_hosts
    - eval `ssh-agent -s`
    - ssh-add <(echo "$GITLAB_DEPLOY_KEY")
    - ssh -T git@<gitlab.domain.com> -p 2222
    - git config --global user.email "$GITLAB_USER_EMAIL"
    - git config --global user.name "$GITLAB_USER_ID"
    - git remote set-url origin ssh://git@<gitlab.domain.com>:2222/path/to/repo.git
  script:    
    - git checkout master
    - git reset --hard origin/master
    - git merge $CI_BUILD_REF
    - git push origin master
run-checks-on-master:
  stage: run-checks-on-master
  tags: 
    - ubuntu-latest
  variables:
    GIT_CHECKOUT: "true"
  image: node:18
  script:
    - npm install
    - CI=false npm run build
    - npm run build:storybook
    - npm run test:unit
    - npm run test:e2e
    - npm run lint
    - npm run type:check
    - npm run i18n:check
deploy-to-production:
  stage: deploy-to-production
  tags: 
    - ubuntu-latest
  environment: prod deploy
  variables:
    GIT_CHECKOUT: "true"
  image: node:18
  script:
    - npm install -g vercel
    - vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
    - vercel build --token=${{ secrets.VERCEL_TOKEN }}
    - echo "Your branch was successfully deployed!"